import{y as o,z as e,O as t,o as n,a as c,w as s,g as a,f as r}from"./index-3809deb0.js";import{m as l}from"./mqtt.d6b2f96e.js";const u={__name:"mqtt",setup(u){let i=o({connected:!1});const m=o("");o(!1);const v=o(""),d=o(0);let g="";g="ws";const p=e({protocol:"ws",host:"jqrjq.cn",port:8083,clientId:"emqx_vue3_"+Math.random().toString(16).substring(2,8),username:"admin",password:"public",clean:!0,connectTimeout:3e4,reconnectPeriod:4e3}),f=()=>{if(d.value+=1,d.value>5)try{i.value.end(),initData(),console.log("connection maxReconnectTimes limit, stop retry")}catch(o){console.log("handleOnReConnect catch error:",o)}};return t((()=>{(()=>{try{const{protocol:o,host:e,port:t,...n}=p,c=`${o}://${e}:${t}/mqtt`;i.value=l.connect(c,n),i.value.on&&(i.value.on("connect",(()=>{v.value="",console.log("connection successful")})),i.value.on("reconnect",f),i.value.on("error",(o=>{console.log("connection error:",o)})),i.value.on("message",((o,e)=>{m.value=m.value.concat(e.toString()),console.log(`received message: ${e} from topic: ${o}`)})))}catch(o){console.log("mqtt.connect error:",o)}})()})),(o,e)=>{const t=a;return n(),c(t,null,{default:s((()=>[r(" mqtt测试 ")])),_:1})}}};export{u as default};
